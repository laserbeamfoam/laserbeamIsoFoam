/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    "alpha.metal.*"
    {
        nAlphaCorr      2;
        nAlphaSubCycles 1;
        
        cAlpha          1;

        MULESCorr       yes;
        nLimiterIter    5;

        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-8;
        relTol          0;
    }

    "pcorr.*"
    {
        solver          PCG;
        preconditioner  DIC;
        tolerance       1e-5;
        relTol          0;
    }

    p_rgh
    {
        solver          PCG;
        preconditioner  DIC;
        tolerance       1e-07;
        relTol          0.05;
    }

    p_rghFinal
    {
        $p_rgh;
        solver          PCG;
        preconditioner  DIC;
        tolerance       1e-08;
        relTol          0;
    }

    U
    {
        solver          PBiCGStab;
        preconditioner  DILU;
        smoother        symGaussSeidel;
        tolerance       1e-06;
        relTol          0;
    }

    T
    {
        solver          PBiCG;
        preconditioner  DILU;
        minIter         1;
        tolerance       1e-12;
        reTol           0.0;
        tolerance       1e-12;
        relTol          0.0;
    }

    TFinal
    {
        $T;
    }
}

MELTING
{
    minTempCorrector 1;
    maxTempCorrector 20;
    epsilonTolerance 1e-6;
    epsilonRelaxation 0.9;
    
    damperSwitch true;//false;//true;
}

PIMPLE
{
    momentumPredictor   no;
    nOuterCorrectors    1;
    nCorrectors         3;
    nNonOrthogonalCorrectors 0;


    residualControl
        {
            "U"
            {
                tolerance    1e-8;
                relTol        0;
            }
            "p_rgh"
            {
                tolerance    1e-8;
                relTol        0;
            }

	    "temperatureTol"
	    {
		tolerance    1e-8;
		relTol       0;
	    }

	    "alternativeTol"
	    {
		tolerance	1e-8;
		relTol		0;
	    }

            "absTol"
            {
                tolerance       1e-8;
                relTol          0;
            }
	    "gTTol"
            {   
                tolerance       1e-7;
                relTol          0;
            }
        }
}

relaxationFactors
{
    equations
    {
        ".*" 1;
    }
}

isoAdvector
{
    // Note: use full Crank-Nicolson when topo changes are not occuring,
    // otherwise the code resorts to Euler implicit
    CrankNicolsonCoeff 0.5;

    // Euler implicit
    //CrankNicolsonCoeff 1;

    gradAlphaNormal true;

    alphaFluxTolerance 1e-6; // 10*SMALL by default

    // Determines which cells are classified as surface cells
    vof2IsoTol         1e-6; // 1e-8 by default

    clipAlphaTol 1e-6;
    nAlphaBounds 1;
    snapAlpha   false; // true
}

// ************************************************************************* //
